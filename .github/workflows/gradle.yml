# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      - name: Grant execute permission for gradle && Build with Gradle without Test
        run: |
          cd ./demo
          chmod +x gradlew
          ./gradlew clean build -x test --stacktrace

      ####### CD ##############
      ## docker hub 로그인 && image build && push
      - name: Docker hub login
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Docker image build
        run: |
          cd ./demo
          docker build -t ${{secrets.DOCKERHUB_USERNAME}}/gitaction-test .

      - name: Docker Hub push
        run: docker push ${{secrets.DOCKERHUB_USERNAME}}/gitaction-test

      - name: Copy docker-compose.yml to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.KEY }}
          source: "./demo/docker-compose.yml"
          target: "/home/ubuntu/"

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.HOST}}
          username: ubuntu
          key: ${{secrets.KEY}}
          script: |
            cd ./demo
            sudo docker login -u ${{secrets.DOCKERHUB_USERNAME}} -p ${{secrets.DOCKERHUB_PASSWORD}}
            sudo docker-compose down
            sudo docker pull ${{secrets.DOCKERHUB_USERNAME}}/gitaction-test
            sudo docker-compose up -d
            sudo docker image prune -f
